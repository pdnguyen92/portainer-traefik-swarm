version: "3.3"

services:
  traefik:
    image: "traefik:v2.10.0"
    command:
      - --log.level=INFO
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --providers.docker.network=traefik-public
      - --api
      - --api.dashboard=true
      #- --certificatesresolvers.leresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      # update your email here
      #- --certificatesresolvers.leresolver.acme.email=youremail@test.com
      # Make sure the this file is available and permission is set correctly
      #- --certificatesresolvers.leresolver.acme.storage=/le/acme.json
      #- --certificatesresolvers.leresolver.acme.tlschallenge=true
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik-public
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # Make sure the volume folder is created
      #- "/mnt/data/traefik/acme.json:/le/acme.json"
    deploy:
      labels:
        # Dashboard
        - "traefik.enable=true"
        # Change the host url here
        - "traefik.http.routers.traefik.rule=Host(`traefik.pnt.home`)"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        #- "traefik.http.routers.traefik.tls.certresolver=leresolver"
        #- "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.entrypoints=web"
        #- "traefik.http.routers.traefik.middlewares=authtraefik"
        # Change the auth password here
        #- "traefik.http.middlewares.authtraefik.basicauth.users=admin:yournewpassword" # user/password

        # global redirect to https
        #- "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
        #- "traefik.http.routers.http-catchall.entrypoints=web"
        #- "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

        # middleware redirect
        #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  whoami:
    image: containous/whoami:v1.5.0
    networks:
      - traefik-public
    command:
      - --port=8082 # Our service listens on 8082
    deploy:
      labels:
        - "traefik.enable=true"
        # Change the host url here
        - "traefik.http.routers.whoami.rule=Host(`whoami.pnt.home`)"
        # Default port is 80, but we put it on 8082. The overwrite happens in the command above -> --port-8082
        - "traefik.http.services.whoami.loadbalancer.server.port=8082"
        #- "traefik.http.routers.my-app.middlewares=auth"
        #- "traefik.http.routers.whoami.entrypoints=websecure"
        - "traefik.http.routers.whoami.entrypoints=web"
        #- "traefik.http.routers.whoami.tls=true"
        #- "traefik.http.routers.whoami.tls.certresolver=leresolver"
        # Change the password here
        #- "traefik.http.middlewares.auth.basicauth.users=admin:changeme" # user/password
        
 agent:
    image: portainer/agent
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - traefik-public
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

 portainer:
    image: portainer/portainer-ce
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - data:/data
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.pnt.home`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.service=portainer"
      # Edge
      #- "traefik.http.routers.edge.rule=Host(`edge.yourdomain.com`)"
      #- "traefik.http.routers.edge.entrypoints=web"
      #- "traefik.http.services.edge.loadbalancer.server.port=8000"
      #- "traefik.http.routers.edge.service=edge"

networks:
  traefik-public:
    external: true

volumes:
   data:
